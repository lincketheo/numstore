State 0:
          statement ::= * query SEMICOLON
          query ::= * create
          create ::= * CREATE IDENTIFIER type
          query ::= * delete
          delete ::= * DELETE IDENTIFIER
          query ::= * insert
          insert ::= * INSERT IDENTIFIER INTEGER expression

                        CREATE shift        62     
                        DELETE shift        53     
                        INSERT shift        52     
                         query shift        64     
                        create shift-reduce 18     query ::= create
                        delete shift-reduce 20     query ::= delete
                        insert shift-reduce 22     query ::= insert
                     statement accept

State 1:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          array ::= LEFT_BRACKET * array_items RIGHT_BRACKET
          array_items ::= * expression
          array_items ::= * array_items COMMA expression
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                   array_items shift        42     
                    expression shift-reduce 30     array_items ::= expression
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 2:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          object_items ::= IDENTIFIER COLON * expression
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    expression shift-reduce 26     object_items ::= IDENTIFIER COLON expression
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 3:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN
          primary ::= LEFT_PAREN * expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    expression shift        48     
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 4:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          array_items ::= array_items COMMA * expression
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    expression shift-reduce 31     array_items ::= array_items COMMA expression
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 5:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          object_items ::= object_items COMMA IDENTIFIER COLON * expression
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    expression shift-reduce 27     object_items ::= object_items COMMA IDENTIFIER COLON expression
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 6:
          insert ::= INSERT IDENTIFIER INTEGER * expression
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          expression ::= * equality
          equality ::= * comparison
          equality ::= * equality EQUAL_EQUAL comparison
          equality ::= * equality BANG_EQUAL comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    expression shift-reduce 23     insert ::= INSERT IDENTIFIER INTEGER expression
                      equality shift        41     
                    comparison shift        31     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 7:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          equality ::= equality BANG_EQUAL * comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    comparison shift        30     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 8:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          equality ::= equality EQUAL_EQUAL * comparison
          comparison ::= * term
          comparison ::= * comparison GREATER term
          comparison ::= * comparison GREATER_EQUAL term
          comparison ::= * comparison LESS term
          comparison ::= * comparison LESS_EQUAL term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                    comparison shift        32     
                          term shift        33     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 9:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          comparison ::= comparison LESS_EQUAL * term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                          term shift        34     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 10:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          comparison ::= comparison LESS * term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                          term shift        35     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 11:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          comparison ::= comparison GREATER_EQUAL * term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                          term shift        38     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 12:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          comparison ::= comparison GREATER * term
          term ::= * factor
          term ::= * term PLUS factor
          term ::= * term MINUS factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                          term shift        40     
                        factor shift        36     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 13:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          term ::= term MINUS * factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                        factor shift        37     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 14:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          term ::= term PLUS * factor
          factor ::= * unary
          factor ::= * factor STAR unary
          factor ::= * factor SLASH unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                        factor shift        39     
                         unary shift-reduce 49     factor ::= unary
                       primary shift-reduce 54     unary ::= primary

State 15:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          struct_items ::= IDENTIFIER * type
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 8      struct_items ::= IDENTIFIER type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 16:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          union_items ::= IDENTIFIER * type
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 12     union_items ::= IDENTIFIER type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 17:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray ::= sarray_dims * type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 15     sarray ::= sarray_dims type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 18:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          union_items ::= union_items COMMA IDENTIFIER * type
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 13     union_items ::= union_items COMMA IDENTIFIER type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 19:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          struct_items ::= struct_items COMMA IDENTIFIER * type
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 9      struct_items ::= struct_items COMMA IDENTIFIER type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 20:
          type ::= * PRIM
          type ::= * enum
          enum ::= * ENUM LEFT_BRACE enum_items RIGHT_BRACE
          type ::= * struct
          struct ::= * STRUCT LEFT_BRACE struct_items RIGHT_BRACE
          type ::= * union
          union ::= * UNION LEFT_BRACE union_items RIGHT_BRACE
          type ::= * sarray
          sarray ::= * sarray_dims type
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims
          create ::= CREATE IDENTIFIER * type

                  LEFT_BRACKET shift        55     
                        STRUCT shift        59     
                         UNION shift        57     
                          ENUM shift        61     
                          PRIM shift-reduce 1      type ::= PRIM
                          type shift-reduce 19     create ::= CREATE IDENTIFIER type
                          enum shift-reduce 2      type ::= enum
                        struct shift-reduce 6      type ::= struct
                         union shift-reduce 10     type ::= union
                        sarray shift-reduce 14     type ::= sarray
                   sarray_dims shift        17     

State 21:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          factor ::= factor SLASH * unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                         unary shift-reduce 51     factor ::= factor SLASH unary
                       primary shift-reduce 54     unary ::= primary

State 22:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= MINUS * unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                         unary shift-reduce 53     unary ::= MINUS unary
                       primary shift-reduce 54     unary ::= primary

State 23:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          unary ::= * BANG unary
          unary ::= BANG * unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                         unary shift-reduce 52     unary ::= BANG unary
                       primary shift-reduce 54     unary ::= primary

State 24:
          literal ::= * object
          object ::= * LEFT_BRACE object_items RIGHT_BRACE
          literal ::= * array
          array ::= * LEFT_BRACKET array_items RIGHT_BRACKET
          literal ::= * STRING
          literal ::= * INTEGER
          literal ::= * FLOAT
          literal ::= * TRUE
          literal ::= * FALSE
          factor ::= factor STAR * unary
          unary ::= * BANG unary
          unary ::= * MINUS unary
          unary ::= * primary
          primary ::= * literal
          primary ::= * LEFT_PAREN expression RIGHT_PAREN

                         MINUS shift        22     
                          BANG shift        23     
                  LEFT_BRACKET shift        1      
                    LEFT_BRACE shift        25     
                    LEFT_PAREN shift        3      
                        STRING shift-reduce 32     literal ::= STRING
                       INTEGER shift-reduce 33     literal ::= INTEGER
                         FLOAT shift-reduce 34     literal ::= FLOAT
                          TRUE shift-reduce 35     literal ::= TRUE
                         FALSE shift-reduce 36     literal ::= FALSE
                       literal shift-reduce 55     primary ::= literal
                        object shift-reduce 24     literal ::= object
                         array shift-reduce 28     literal ::= array
                         unary shift-reduce 50     factor ::= factor STAR unary
                       primary shift-reduce 54     unary ::= primary

State 25:
          object ::= LEFT_BRACE * object_items RIGHT_BRACE
          object_items ::= * IDENTIFIER COLON expression
          object_items ::= * object_items COMMA IDENTIFIER COLON expression

                    IDENTIFIER shift        47     
                  object_items shift        43     

State 26:
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET
     (16) sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET *
          sarray_dims ::= * LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims
          sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET * sarray_dims

                  LEFT_BRACKET shift        55     
                  LEFT_BRACKET reduce       16      ** Parsing conflict **
                   sarray_dims shift-reduce 17     sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims
                     {default} reduce       16     sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET

State 27:
          union ::= UNION LEFT_BRACE * union_items RIGHT_BRACE
          union_items ::= * IDENTIFIER type
          union_items ::= * union_items COMMA IDENTIFIER type

                    IDENTIFIER shift        16     
                   union_items shift        44     

State 28:
          struct ::= STRUCT LEFT_BRACE * struct_items RIGHT_BRACE
          struct_items ::= * IDENTIFIER type
          struct_items ::= * struct_items COMMA IDENTIFIER type

                    IDENTIFIER shift        15     
                  struct_items shift        45     

State 29:
          enum ::= ENUM LEFT_BRACE * enum_items RIGHT_BRACE
          enum_items ::= * IDENTIFIER
          enum_items ::= * enum_items COMMA IDENTIFIER

                    IDENTIFIER shift-reduce 4      enum_items ::= IDENTIFIER
                    enum_items shift        46     

State 30:
     (40) equality ::= equality BANG_EQUAL comparison *
          comparison ::= comparison * GREATER term
          comparison ::= comparison * GREATER_EQUAL term
          comparison ::= comparison * LESS term
          comparison ::= comparison * LESS_EQUAL term

                       GREATER shift        12     
                 GREATER_EQUAL shift        11     
                          LESS shift        10     
                    LESS_EQUAL shift        9      
                     {default} reduce       40     equality ::= equality BANG_EQUAL comparison

State 31:
     (38) equality ::= comparison *
          comparison ::= comparison * GREATER term
          comparison ::= comparison * GREATER_EQUAL term
          comparison ::= comparison * LESS term
          comparison ::= comparison * LESS_EQUAL term

                       GREATER shift        12     
                 GREATER_EQUAL shift        11     
                          LESS shift        10     
                    LESS_EQUAL shift        9      
                     {default} reduce       38     equality ::= comparison

State 32:
     (39) equality ::= equality EQUAL_EQUAL comparison *
          comparison ::= comparison * GREATER term
          comparison ::= comparison * GREATER_EQUAL term
          comparison ::= comparison * LESS term
          comparison ::= comparison * LESS_EQUAL term

                       GREATER shift        12     
                 GREATER_EQUAL shift        11     
                          LESS shift        10     
                    LESS_EQUAL shift        9      
                     {default} reduce       39     equality ::= equality EQUAL_EQUAL comparison

State 33:
     (41) comparison ::= term *
          term ::= term * PLUS factor
          term ::= term * MINUS factor

                          PLUS shift        14     
                         MINUS shift        13     
                     {default} reduce       41     comparison ::= term

State 34:
     (45) comparison ::= comparison LESS_EQUAL term *
          term ::= term * PLUS factor
          term ::= term * MINUS factor

                          PLUS shift        14     
                         MINUS shift        13     
                     {default} reduce       45     comparison ::= comparison LESS_EQUAL term

State 35:
     (44) comparison ::= comparison LESS term *
          term ::= term * PLUS factor
          term ::= term * MINUS factor

                          PLUS shift        14     
                         MINUS shift        13     
                     {default} reduce       44     comparison ::= comparison LESS term

State 36:
     (46) term ::= factor *
          factor ::= factor * STAR unary
          factor ::= factor * SLASH unary

                         SLASH shift        21     
                          STAR shift        24     
                     {default} reduce       46     term ::= factor

State 37:
     (48) term ::= term MINUS factor *
          factor ::= factor * STAR unary
          factor ::= factor * SLASH unary

                         SLASH shift        21     
                          STAR shift        24     
                     {default} reduce       48     term ::= term MINUS factor

State 38:
     (43) comparison ::= comparison GREATER_EQUAL term *
          term ::= term * PLUS factor
          term ::= term * MINUS factor

                          PLUS shift        14     
                         MINUS shift        13     
                     {default} reduce       43     comparison ::= comparison GREATER_EQUAL term

State 39:
     (47) term ::= term PLUS factor *
          factor ::= factor * STAR unary
          factor ::= factor * SLASH unary

                         SLASH shift        21     
                          STAR shift        24     
                     {default} reduce       47     term ::= term PLUS factor

State 40:
     (42) comparison ::= comparison GREATER term *
          term ::= term * PLUS factor
          term ::= term * MINUS factor

                          PLUS shift        14     
                         MINUS shift        13     
                     {default} reduce       42     comparison ::= comparison GREATER term

State 41:
     (37) expression ::= equality *
          equality ::= equality * EQUAL_EQUAL comparison
          equality ::= equality * BANG_EQUAL comparison

                    BANG_EQUAL shift        7      
                   EQUAL_EQUAL shift        8      
                     {default} reduce       37     expression ::= equality

State 42:
          array ::= LEFT_BRACKET array_items * RIGHT_BRACKET
          array_items ::= array_items * COMMA expression

                 RIGHT_BRACKET shift-reduce 29     array ::= LEFT_BRACKET array_items RIGHT_BRACKET
                         COMMA shift        4      

State 43:
          object ::= LEFT_BRACE object_items * RIGHT_BRACE
          object_items ::= object_items * COMMA IDENTIFIER COLON expression

                   RIGHT_BRACE shift-reduce 25     object ::= LEFT_BRACE object_items RIGHT_BRACE
                         COMMA shift        50     

State 44:
          union ::= UNION LEFT_BRACE union_items * RIGHT_BRACE
          union_items ::= union_items * COMMA IDENTIFIER type

                   RIGHT_BRACE shift-reduce 11     union ::= UNION LEFT_BRACE union_items RIGHT_BRACE
                         COMMA shift        56     

State 45:
          struct ::= STRUCT LEFT_BRACE struct_items * RIGHT_BRACE
          struct_items ::= struct_items * COMMA IDENTIFIER type

                   RIGHT_BRACE shift-reduce 7      struct ::= STRUCT LEFT_BRACE struct_items RIGHT_BRACE
                         COMMA shift        58     

State 46:
          enum ::= ENUM LEFT_BRACE enum_items * RIGHT_BRACE
          enum_items ::= enum_items * COMMA IDENTIFIER

                   RIGHT_BRACE shift-reduce 3      enum ::= ENUM LEFT_BRACE enum_items RIGHT_BRACE
                         COMMA shift        60     

State 47:
          object_items ::= IDENTIFIER * COLON expression

                         COLON shift        2      

State 48:
          primary ::= LEFT_PAREN expression * RIGHT_PAREN

                   RIGHT_PAREN shift-reduce 56     primary ::= LEFT_PAREN expression RIGHT_PAREN

State 49:
          object_items ::= object_items COMMA IDENTIFIER * COLON expression

                         COLON shift        5      

State 50:
          object_items ::= object_items COMMA * IDENTIFIER COLON expression

                    IDENTIFIER shift        49     

State 51:
          insert ::= INSERT IDENTIFIER * INTEGER expression

                       INTEGER shift        6      

State 52:
          insert ::= INSERT * IDENTIFIER INTEGER expression

                    IDENTIFIER shift        51     

State 53:
          delete ::= DELETE * IDENTIFIER

                    IDENTIFIER shift-reduce 21     delete ::= DELETE IDENTIFIER

State 54:
          sarray_dims ::= LEFT_BRACKET INTEGER * RIGHT_BRACKET
          sarray_dims ::= LEFT_BRACKET INTEGER * RIGHT_BRACKET sarray_dims

                 RIGHT_BRACKET shift        26     

State 55:
          sarray_dims ::= LEFT_BRACKET * INTEGER RIGHT_BRACKET
          sarray_dims ::= LEFT_BRACKET * INTEGER RIGHT_BRACKET sarray_dims

                       INTEGER shift        54     

State 56:
          union_items ::= union_items COMMA * IDENTIFIER type

                    IDENTIFIER shift        18     

State 57:
          union ::= UNION * LEFT_BRACE union_items RIGHT_BRACE

                    LEFT_BRACE shift        27     

State 58:
          struct_items ::= struct_items COMMA * IDENTIFIER type

                    IDENTIFIER shift        19     

State 59:
          struct ::= STRUCT * LEFT_BRACE struct_items RIGHT_BRACE

                    LEFT_BRACE shift        28     

State 60:
          enum_items ::= enum_items COMMA * IDENTIFIER

                    IDENTIFIER shift-reduce 5      enum_items ::= enum_items COMMA IDENTIFIER

State 61:
          enum ::= ENUM * LEFT_BRACE enum_items RIGHT_BRACE

                    LEFT_BRACE shift        29     

State 62:
          create ::= CREATE * IDENTIFIER type

                    IDENTIFIER shift        20     

State 63:
      (0) statement ::= query SEMICOLON *

                             $ reduce       0      statement ::= query SEMICOLON

State 64:
          statement ::= query * SEMICOLON

                     SEMICOLON shift        63     

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: PLUS
    2: MINUS
    3: SLASH
    4: STAR
    5: BANG
    6: BANG_EQUAL
    7: EQUAL_EQUAL
    8: GREATER
    9: GREATER_EQUAL
   10: LESS
   11: LESS_EQUAL
   12: NOT
   13: CARET
   14: PERCENT
   15: PIPE
   16: AMPERSAND
   17: SEMICOLON
   18: COLON
   19: LEFT_BRACKET
   20: RIGHT_BRACKET
   21: LEFT_BRACE
   22: RIGHT_BRACE
   23: LEFT_PAREN
   24: RIGHT_PAREN
   25: COMMA
   26: STRING
   27: IDENTIFIER
   28: INTEGER
   29: FLOAT
   30: CREATE
   31: DELETE
   32: INSERT
   33: STRUCT
   34: UNION
   35: ENUM
   36: PRIM
   37: TRUE
   38: FALSE
   39: query: CREATE DELETE INSERT
   40: create: CREATE
   41: delete: DELETE
   42: insert: INSERT
   43: type: LEFT_BRACKET STRUCT UNION ENUM PRIM
   44: enum: ENUM
   45: enum_items: IDENTIFIER
   46: struct: STRUCT
   47: struct_items: IDENTIFIER
   48: union: UNION
   49: union_items: IDENTIFIER
   50: sarray: LEFT_BRACKET
   51: sarray_dims: LEFT_BRACKET
   52: literal: LEFT_BRACKET LEFT_BRACE STRING INTEGER FLOAT TRUE FALSE
   53: object: LEFT_BRACE
   54: object_items: IDENTIFIER
   55: array: LEFT_BRACKET
   56: array_items: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   57: expression: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   58: equality: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   59: comparison: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   60: term: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   61: factor: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   62: unary: MINUS BANG LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   63: primary: LEFT_BRACKET LEFT_BRACE LEFT_PAREN STRING INTEGER FLOAT TRUE FALSE
   64: statement: CREATE DELETE INSERT
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ PLUS MINUS SLASH STAR BANG BANG_EQUAL EQUAL_EQUAL GREATER GREATER_EQUAL
LESS LESS_EQUAL NOT CARET PERCENT PIPE AMPERSAND SEMICOLON COLON
LEFT_BRACKET RIGHT_BRACKET LEFT_BRACE RIGHT_BRACE LEFT_PAREN RIGHT_PAREN
COMMA CREATE DELETE INSERT STRUCT UNION ENUM TRUE FALSE statement
----------------------------------------------------
Rules:
   0: statement ::= query SEMICOLON.
   1: type ::= PRIM.
   2: type ::= enum.
   3: enum ::= ENUM LEFT_BRACE enum_items RIGHT_BRACE.
   4: enum_items ::= IDENTIFIER.
   5: enum_items ::= enum_items COMMA IDENTIFIER.
   6: type ::= struct.
   7: struct ::= STRUCT LEFT_BRACE struct_items RIGHT_BRACE.
   8: struct_items ::= IDENTIFIER type.
   9: struct_items ::= struct_items COMMA IDENTIFIER type.
  10: type ::= union.
  11: union ::= UNION LEFT_BRACE union_items RIGHT_BRACE.
  12: union_items ::= IDENTIFIER type.
  13: union_items ::= union_items COMMA IDENTIFIER type.
  14: type ::= sarray.
  15: sarray ::= sarray_dims type.
  16: sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET.
  17: sarray_dims ::= LEFT_BRACKET INTEGER RIGHT_BRACKET sarray_dims.
  18: query ::= create.
  19: create ::= CREATE IDENTIFIER type.
  20: query ::= delete.
  21: delete ::= DELETE IDENTIFIER.
  22: query ::= insert.
  23: insert ::= INSERT IDENTIFIER INTEGER expression.
  24: literal ::= object.
  25: object ::= LEFT_BRACE object_items RIGHT_BRACE.
  26: object_items ::= IDENTIFIER COLON expression.
  27: object_items ::= object_items COMMA IDENTIFIER COLON expression.
  28: literal ::= array.
  29: array ::= LEFT_BRACKET array_items RIGHT_BRACKET.
  30: array_items ::= expression.
  31: array_items ::= array_items COMMA expression.
  32: literal ::= STRING.
  33: literal ::= INTEGER.
  34: literal ::= FLOAT.
  35: literal ::= TRUE.
  36: literal ::= FALSE.
  37: expression ::= equality.
  38: equality ::= comparison.
  39: equality ::= equality EQUAL_EQUAL comparison.
  40: equality ::= equality BANG_EQUAL comparison.
  41: comparison ::= term.
  42: comparison ::= comparison GREATER term.
  43: comparison ::= comparison GREATER_EQUAL term.
  44: comparison ::= comparison LESS term.
  45: comparison ::= comparison LESS_EQUAL term.
  46: term ::= factor.
  47: term ::= term PLUS factor.
  48: term ::= term MINUS factor.
  49: factor ::= unary.
  50: factor ::= factor STAR unary.
  51: factor ::= factor SLASH unary.
  52: unary ::= BANG unary.
  53: unary ::= MINUS unary.
  54: unary ::= primary.
  55: primary ::= literal.
  56: primary ::= LEFT_PAREN expression RIGHT_PAREN.
